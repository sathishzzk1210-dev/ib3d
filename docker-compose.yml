version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: printflow-postgres
    environment:
      POSTGRES_DB: printflow
      POSTGRES_USER: printflow
      POSTGRES_PASSWORD: printflow123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - printflow-network

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: printflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - printflow-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: printflow-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - printflow-network

  # Create MinIO buckets
  minio-setup:
    image: minio/mc:latest
    container_name: printflow-minio-setup
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb minio/printflow-files;
      /usr/bin/mc mb minio/printflow-invoices;
      /usr/bin/mc policy set public minio/printflow-files;
      exit 0;
      "
    networks:
      - printflow-network

  # ClamAV Antivirus
  clamav:
    image: clamav/clamav:latest
    container_name: printflow-clamav
    ports:
      - "3310:3310"
    volumes:
      - clamav_data:/var/lib/clamav
    networks:
      - printflow-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  clamav_data:

networks:
  printflow-network:
    driver: bridge